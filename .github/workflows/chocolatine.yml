name: chocolatine

on:
    push:
        branches-ignore:
            - "ga-ignore-*"
    pull_request:
        branches-ignore:
            - "ga-ignore-*"

env:
    MIRROR_URL: git@github.com:EpitechPromo2026/B-DOP-200-STG-2-1-chocolatine-sofiane.saou.git
    EXECUTABLES: "test"
    
jobs:
    check_repository_cleanliness:
        name: check clean
        runs-on: ubuntu-latest
        steps:
          - name: Check repository
            uses: actions/checkout@v2
            with:
                fetch-depth: 0
          - name: Find unwanted file
            run: find . -regextype posix-extended -regex '.*\.(~.a|o|so|gcda|gcno|gcov)' -exec echo "::error file={},title="Unwanted file detected"::{}" \;
          - name: Find pain_au_chocolat files
            run: find . -iname "*pain_au_chocolat*" -exec echo "::error file={},title="Unwanted file detected"::{}" \;
          - name: Find tmp in directory
            run: find . -path '*/tmp/*' -exec echo "::error file={},title="Unwanted file detected"::{}" \;
            
    check_program_compilation:
        name: check compilation
        runs-on: ubuntu-latest
        container: epitechcontent/epitest-docker
        needs:
            - check_repository_cleanliness
        steps:        
          - name: Check repository
            uses: actions/checkout@v2
            with:
                fetch-depth: 0
          - name: Compilation execution     
            timeout-minutes: 2
            run: make
          - name: Compilation clean  
            timeout-minutes: 2
            run: make clean
     run_tests:
    needs: [check_program_compilation]
    name: "Runs tests with criterion"
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest

    steps:
      - uses: actions/checkout@v3
      - id: run_tests
        run: make tests_run
        timeout-minutes: 2
    push_to_mirror:
        name: Mirorring                         
        runs-on: ubuntu-latest
        needs:
            - run_tests
        if: github.event_name == 'push'
        steps:
          - name: Check repository
            uses: actions/checkout@v2
            with:
                fetch-depth: 0
          - name: Check mirorring
            uses: pixta-dev/repository-mirroring-action@v1
            with:
                target_repo_url:
                    ${{ env.MIRROR_URL }}
                ssh_private_key:
                    ${{ secrets.GIT_SSH_PRIVATE_KEY }}
